/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRequiredRouteImport } from './routes/_auth-required'
import { Route as R404RouteImport } from './routes/404'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthVerifyRouteImport } from './routes/auth/verify'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as AuthRequiredDashboardRouteImport } from './routes/_auth-required/dashboard'

const AuthRequiredRoute = AuthRequiredRouteImport.update({
  id: '/_auth-required',
  getParentRoute: () => rootRouteImport,
} as any)
const R404Route = R404RouteImport.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthVerifyRoute = AuthVerifyRouteImport.update({
  id: '/auth/verify',
  path: '/auth/verify',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRequiredDashboardRoute = AuthRequiredDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthRequiredRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/dashboard': typeof AuthRequiredDashboardRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verify': typeof AuthVerifyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/dashboard': typeof AuthRequiredDashboardRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verify': typeof AuthVerifyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/_auth-required': typeof AuthRequiredRouteWithChildren
  '/_auth-required/dashboard': typeof AuthRequiredDashboardRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verify': typeof AuthVerifyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/404'
    | '/dashboard'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verify'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/404'
    | '/dashboard'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verify'
  id:
    | '__root__'
    | '/'
    | '/404'
    | '/_auth-required'
    | '/_auth-required/dashboard'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verify'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R404Route: typeof R404Route
  AuthRequiredRoute: typeof AuthRequiredRouteWithChildren
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  AuthVerifyRoute: typeof AuthVerifyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth-required': {
      id: '/_auth-required'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRequiredRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/verify': {
      id: '/auth/verify'
      path: '/auth/verify'
      fullPath: '/auth/verify'
      preLoaderRoute: typeof AuthVerifyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth-required/dashboard': {
      id: '/_auth-required/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthRequiredDashboardRouteImport
      parentRoute: typeof AuthRequiredRoute
    }
  }
}

interface AuthRequiredRouteChildren {
  AuthRequiredDashboardRoute: typeof AuthRequiredDashboardRoute
}

const AuthRequiredRouteChildren: AuthRequiredRouteChildren = {
  AuthRequiredDashboardRoute: AuthRequiredDashboardRoute,
}

const AuthRequiredRouteWithChildren = AuthRequiredRoute._addFileChildren(
  AuthRequiredRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R404Route: R404Route,
  AuthRequiredRoute: AuthRequiredRouteWithChildren,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  AuthVerifyRoute: AuthVerifyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
